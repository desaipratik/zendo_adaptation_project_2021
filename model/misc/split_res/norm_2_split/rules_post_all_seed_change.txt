["Z.forall(lambda x1: Z.not_operator(Z.less(x1,3,'size')),X)", "Z.forall(lambda x1: Z.grequal(x1,3,'size'),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,'red','colour')),X)", "Z.forall(lambda x1: Z.not_operator(Z.greater(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,'red','colour')),X)"]
["Z.forall(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,'red','colour')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,'red','colour')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,'red','colour')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,'red','colour')),X)"]
["Z.atmost(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),3,X)", "Z.atmost(lambda x1: Z.not_operator(Z.less(x1,2,'size')),3,X)", "Z.atmost(lambda x1: Z.not_operator(Z.grequal(x1,3,'size')),3,X)", "Z.atmost(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),3,X)", "Z.atmost(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),3,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.or_operator(Z.less(x2,x1,'size'),Z.equal(x2,x1,'colour')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,3,'size')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,3,'size')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,3,'size')),X),X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'upright','orientation'),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'upright','orientation'))),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.or_operator(Z.equal(x2,x1,'colour'),Z.not_operator(Z.not_operator(Z.equal(x2,'strange','orientation')))),Z.not_operator(Z.equal(x2,x1,'colour'))),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'upright','orientation'),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x1,x2,'orientation'))),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'upright','orientation'),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'upright','orientation'))),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.less(x2,3,'size'),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'upright','orientation'))),X),2,X)"]
["Z.exists(lambda x1: Z.lequal(x1,3,'size'),X)", "Z.exists(lambda x1: Z.not_operator(Z.greater(x1,2,'size')),X)", "Z.exists(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),X)", "Z.exists(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),X)", "Z.exists(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),X)"]
["Z.exists(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'green','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.equal(x1,'rhs','orientation'),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.or_operator(Z.equal(x1,'lhs','orientation'),Z.equal(x1,'rhs','orientation'))),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.or_operator(Z.equal(x1,'lhs','orientation'),Z.equal(x1,'rhs','orientation'))),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.or_operator(Z.equal(x1,'lhs','orientation'),Z.equal(x1,'rhs','orientation'))),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.less(x1,1,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.greater(x1,1,'size'),Z.or_operator(Z.equal(x1,'lhs','orientation'),Z.equal(x1,'rhs','orientation'))),X)"]
["Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),2,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),2,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),2,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),2,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),2,X)"]
["Z.exists(lambda x1: Z.grequal(x1,1,'size'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.exactly(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.lequal(x2,3,'size'),Z.equal(x2,'green','colour')),1,X),2,X)", "Z.exactly(lambda x1: Z.atleast(lambda x2: Z.lequal(x2,1,'size'),1,X),2,X)", "Z.atmost(lambda x1: Z.forall(lambda x2: Z.or_operator(Z.or_operator(Z.not_operator(Z.lequal(x1,1,'size')),Z.less(x2,x1,'size')),Z.equal(x1,1,'size')),X),1,X)", "Z.exactly(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x2,'green','colour')),1,X),2,X)", "Z.exactly(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x2,'green','colour')),1,X),2,X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.less(x1,x2,'size'),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,3,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,3,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,3,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,3,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.hor_operator(x2,x1,'contact'),Z.and_operator(Z.not_operator(Z.equal(x2,'red','colour')),Z.equal(x2,1,'size'))),X),1,X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.hor_operator(x2,x1,'contact'),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),X),1,X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.not_operator(Z.equal(x1,x2,'colour')),Z.hor_operator(x1,x2,'contact')),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.not_operator(Z.equal(x1,x2,'colour')),Z.hor_operator(x1,x2,'contact')),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.not_operator(Z.equal(x1,x2,'colour')),Z.hor_operator(x2,x1,'contact')),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.not_operator(Z.equal(x1,x2,'colour')),Z.hor_operator(x1,x2,'contact')),X),1,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.not_operator(Z.equal(x1,x2,'colour')),Z.hor_operator(x1,x2,'contact')),X),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.not_operator(Z.or_operator(Z.not_operator(Z.and_operator(Z.lequal(x1,x2,'size'),Z.equal(x1,x2,'size'))),Z.not_operator(Z.equal(x2,x1,'size')))),Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,2,'size'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,2,'size')),Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,x1,'size'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,2,'size')),Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,2,'size'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exactly(lambda x3: Z.equal(x2,'rhs','orientation'),3,X),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,2,'size')),Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,2,'size'))),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,1,'size'),X)", "Z.atmost(lambda x1: Z.exists(lambda x2: Z.equal(x1,x2,'orientation'),X),2,X)", "Z.atmost(lambda x1: Z.equal(x1,'no','grounded'),1,X)"]
["Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),2,X)", "Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),2,X)", "Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),2,X)", "Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),2,X)", "Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),2,X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'upright','orientation')),1,X)", "Z.atleast(lambda x1: Z.less(x1,3,'size'),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'upright','orientation')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.grequal(x1,2,'size'),Z.equal(x1,'upright','orientation')),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.exactly(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.greater(x1,x2,'size')),X),1,X)", "Z.exactly(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.greater(x1,x2,'size')),X),1,X)", "Z.exactly(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.greater(x1,x2,'size')),X),1,X)", "Z.exactly(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.greater(x1,x2,'size')),X),1,X)", "Z.exactly(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.greater(x1,x2,'size')),X),1,X)"]
["Z.atleast(lambda x1: Z.atleast(lambda x2: Z.hor_operator(x1,x2,'contact'),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.hor_operator(x1,x2,'contact'),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.hor_operator(x2,x1,'contact'),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.hor_operator(x1,x2,'contact'),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.hor_operator(x1,x2,'contact'),1,X),1,X)"]
["Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,3,'size')),X)"]
["Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.lequal(x1,x2,'size'),Z.hor_operator(x1,x2,'contact')),1,X),X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'yes','grounded'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.grequal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.not_operator(Z.equal(x1,x2,'orientation'))),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.not_operator(Z.equal(x1,x2,'orientation'))),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.not_operator(Z.equal(x1,x2,'orientation'))),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.not_operator(Z.equal(x1,x2,'orientation'))),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.not_operator(Z.equal(x1,x2,'orientation'))),X),2,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.not_operator(Z.equal(x1,'upright','orientation')),Z.not_operator(Z.equal(x2,'upright','orientation'))),Z.hor_operator(x1,x2,'contact')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.not_operator(Z.equal(x1,'upright','orientation')),Z.not_operator(Z.greater(x2,x1,'size'))),Z.hor_operator(x1,x2,'contact')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.not_operator(Z.equal(x1,'upright','orientation')),Z.not_operator(Z.equal(x2,'upright','orientation'))),Z.hor_operator(x1,x2,'contact')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.not_operator(Z.equal(x1,'upright','orientation')),Z.not_operator(Z.equal(x2,'upright','orientation'))),Z.hor_operator(x1,x2,'contact')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.not_operator(Z.equal(x1,'upright','orientation')),Z.not_operator(Z.equal(x2,'upright','orientation'))),Z.hor_operator(x1,x2,'contact')),X),X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'lhs','orientation')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'lhs','orientation')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'lhs','orientation')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'lhs','orientation')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'lhs','orientation')),1,X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.atleast(lambda x3: Z.not_operator(Z.equal(x3,3,'size')),1,X),X),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'upright','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.grequal(x1,3,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'upright','orientation')),X)", "Z.exists(lambda x1: Z.lequal(x1,1,'size'),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.and_operator(Z.lequal(x1,2,'size'),Z.equal(x1,'yes','grounded'))),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.grequal(x1,x3,'size')),Z.equal(x3,'green','colour')),X),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'blue','colour')),Z.equal(x3,'green','colour')),X),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'blue','colour')),Z.equal(x3,'green','colour')),X),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'blue','colour')),Z.equal(x3,x1,'orientation')),X),X),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,2,'size')),Z.and_operator(Z.equal(x2,'green','colour'),Z.equal(x1,'blue','colour'))),Z.not_operator(Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.grequal(x1,x2,'size'),Z.lequal(x2,x1,'size')),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,2,'size')),Z.and_operator(Z.equal(x2,'green','colour'),Z.equal(x2,1,'size'))),Z.not_operator(Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,2,'size')),Z.and_operator(Z.equal(x2,'green','colour'),Z.equal(x2,1,'size'))),Z.not_operator(Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.not_operator(Z.greater(x3,2,'size')),X),X),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,1,'size'),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.not_operator(Z.greater(x2,x1,'size')),Z.and_operator(Z.equal(x2,1,'size'),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.atleast(lambda x1: Z.exactly(lambda x2: Z.exists(lambda x3: Z.equal(x2,x1,'size'),X),1,X),2,X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,1,'size'),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.and_operator(Z.equal(x2,1,'size'),Z.hor_operator(x1,x2,'contact'))),X),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.grequal(x1,2,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.exists(lambda x1: Z.and_operator(Z.and_operator(Z.lequal(x1,3,'size'),Z.equal(x1,1,'size')),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.not_operator(Z.less(x1,1,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),Z.equal(x1,'lhs','orientation')),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'upright','orientation'),Z.equal(x1,'blue','colour')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'upright','orientation'),Z.equal(x1,'blue','colour')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'blue','colour')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'upright','orientation'),Z.equal(x1,'blue','colour')),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'strange','orientation'),1,X)", "Z.atleast(lambda x1: Z.grequal(x1,2,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.atleast(lambda x3: Z.not_operator(Z.not_operator(Z.not_operator(Z.greater(x3,x1,'size')))),1,X),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),Z.equal(x3,3,'size')),X),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.lequal(x3,1,'size'),X),X),X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.equal(x1,'green','colour')),X),3,X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),Z.equal(x3,3,'size')),X),X),X)"]
