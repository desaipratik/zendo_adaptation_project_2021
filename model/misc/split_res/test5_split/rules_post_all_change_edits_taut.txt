["Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),X)"]
["Z.exists(lambda x1: Z.equal(x1,1,'size'),X)", "Z.exists(lambda x1: Z.equal(x1,1,'size'),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.equal(x3,1,'size'),X),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.equal(x3,1,'size'),X),X),X)"]
["Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)", "Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.greater(x2,1,'size'),X),X)", "Z.forall(lambda x1: Z.exists(lambda x2: Z.greater(x2,1,'size'),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)", "Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.exists(lambda x1: Z.lequal(x1,1,'size'),X)", "Z.exists(lambda x1: Z.lequal(x1,1,'size'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.equal(x2,x1,'grounded'),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.equal(x2,x1,'grounded'),X),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.hor_operator(x2,x1,'contact')),2,X),X),X)", "Z.forall(lambda x1: Z.exists(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.hor_operator(x2,x1,'contact')),2,X),X),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.atmost(lambda x1: Z.atmost(lambda x2: Z.forall(lambda x3: Z.not_operator(Z.not_operator(Z.hor_operator(x2,x1,'contact'))),X),3,X),2,X)", "Z.atmost(lambda x1: Z.atmost(lambda x2: Z.forall(lambda x3: Z.not_operator(Z.not_operator(Z.hor_operator(x2,x1,'contact'))),X),3,X),2,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.hor_operator(x2,x1,'contact')),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.hor_operator(x2,x1,'contact')),X),X)"]
["Z.exactly(lambda x1: Z.exists(lambda x2: Z.less(x2,3,'size'),X),3,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.less(x2,3,'size'),X),3,X)"]
["Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)", "Z.forall(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.greater(x2,2,'size'),X),2,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.greater(x2,2,'size'),X),2,X)"]
["Z.exactly(lambda x1: Z.greater(x1,2,'size'),1,X)", "Z.exactly(lambda x1: Z.greater(x1,2,'size'),1,X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.equal(x1,'blue','colour'),X),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.equal(x1,'blue','colour'),X),X),X)"]
["Z.atleast(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.not_operator(Z.and_operator(Z.or_operator(Z.hor_operator(x1,x2,'contact'),Z.not_operator(Z.and_operator(Z.or_operator(Z.less(x1,x2,'size'),Z.equal(x1,'strange','orientation')),Z.hor_operator(x2,x1,'contact')))),Z.not_operator(Z.hor_operator(x1,x2,'contact'))))),X),1,X)", "Z.atleast(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.not_operator(Z.and_operator(Z.or_operator(Z.hor_operator(x1,x2,'contact'),Z.not_operator(Z.and_operator(Z.or_operator(Z.grequal(x1,x2,'size'),Z.equal(x1,'strange','orientation')),Z.hor_operator(x2,x1,'contact')))),Z.not_operator(Z.hor_operator(x1,x2,'contact'))))),X),1,X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.grequal(x2,1,'size'),X),X)", "Z.forall(lambda x1: Z.exists(lambda x2: Z.grequal(x2,1,'size'),X),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.lequal(x2,x1,'size'),X),X)", "Z.forall(lambda x1: Z.exists(lambda x2: Z.lequal(x2,x1,'size'),X),X)"]
["Z.exists(lambda x1: Z.exactly(lambda x2: Z.equal(x1,x2,'colour'),3,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.equal(x1,x2,'colour'),3,X),X)"]
["Z.exists(lambda x1: Z.equal(x1,2,'size'),X)", "Z.exists(lambda x1: Z.equal(x1,2,'size'),X)"]
["Z.exactly(lambda x1: Z.atleast(lambda x2: Z.forall(lambda x3: Z.not_operator(Z.and_operator(Z.hor_operator(x3,x2,'contact'),Z.not_operator(Z.equal(x1,x2,'orientation')))),X),2,X),3,X)", "Z.exactly(lambda x1: Z.atleast(lambda x2: Z.forall(lambda x3: Z.not_operator(Z.and_operator(Z.hor_operator(x3,x2,'contact'),Z.not_operator(Z.equal(x1,x2,'orientation')))),X),2,X),3,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.equal(x2,'blue','colour'),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.equal(x2,'blue','colour'),X),X)"]
["Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)"]
["Z.atmost(lambda x1: Z.equal(x1,'strange','orientation'),3,X)", "Z.atmost(lambda x1: Z.equal(x1,'strange','orientation'),3,X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.not_operator(Z.equal(x2,2,'size'))),X),3,X)", "Z.atleast(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.not_operator(Z.equal(x2,2,'size'))),X),3,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,'lhs','orientation'),X)", "Z.exists(lambda x1: Z.equal(x1,'lhs','orientation'),X)"]
["Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)", "Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.forall(lambda x1: Z.equal(x1,'upright','orientation'),X)", "Z.forall(lambda x1: Z.equal(x1,'upright','orientation'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.equal(x1,x2,'size'),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.equal(x1,x2,'size'),X),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.hor_operator(x2,x1,'contact'),X),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.hor_operator(x2,x1,'contact'),X),X),X)"]
["Z.forall(lambda x1: Z.atleast(lambda x2: Z.not_operator(Z.not_operator(Z.equal(x2,x1,'grounded'))),3,X),X)", "Z.forall(lambda x1: Z.atleast(lambda x2: Z.not_operator(Z.not_operator(Z.equal(x2,x1,'grounded'))),3,X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)", "Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.exists(lambda x1: Z.or_operator(Z.less(x1,2,'size'),Z.not_operator(Z.equal(x1,'red','colour'))),X)", "Z.exists(lambda x1: Z.or_operator(Z.less(x1,2,'size'),Z.not_operator(Z.equal(x1,'red','colour'))),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.or_operator(Z.equal(x1,x2,'size'),Z.equal(x1,x2,'size')),Z.not_operator(Z.equal(x1,1,'size'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,x2,'orientation'),Z.not_operator(Z.equal(x1,1,'size'))),X),X)"]
["Z.exactly(lambda x1: Z.forall(lambda x2: Z.forall(lambda x3: Z.hor_operator(x1,x3,'contact'),X),X),3,X)", "Z.exactly(lambda x1: Z.forall(lambda x2: Z.forall(lambda x3: Z.hor_operator(x1,x3,'contact'),X),X),3,X)"]
