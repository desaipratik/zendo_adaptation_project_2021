["Z.exists(lambda x1: Z.or_operator(Z.not_operator(Z.not_operator(Z.grequal(x1,1,'size'))),Z.lequal(x1,3,'size')),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.equal(x1,'blue','colour')),X)"]
["Z.forall(lambda x1: Z.atleast(lambda x2: Z.atmost(lambda x3: Z.or_operator(Z.hor_operator(x1,x2,'contact'),Z.not_operator(Z.and_operator(Z.lequal(x1,3,'size'),Z.not_operator(Z.and_operator(Z.equal(x1,x2,'orientation'),Z.less(x1,x3,'size')))))),3,X),2,X),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.not_operator(Z.grequal(x1,3,'size'))),X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.and_operator(Z.less(x1,x2,'size'),Z.grequal(x2,1,'size'))),X),1,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.less(x1,x2,'size'),X),X)"]
["Z.exists(lambda x1: Z.or_operator(Z.or_operator(Z.not_operator(Z.or_operator(Z.equal(x1,'strange','orientation'),Z.greater(x1,1,'size'))),Z.less(x1,1,'size')),Z.and_operator(Z.and_operator(Z.not_operator(Z.grequal(x1,1,'size')),Z.not_operator(Z.equal(x1,'no','grounded'))),Z.or_operator(Z.or_operator(Z.equal(x1,'no','grounded'),Z.equal(x1,'red','colour')),Z.grequal(x1,1,'size')))),X)"]
["Z.atleast(lambda x1: Z.lequal(x1,3,'size'),1,X)"]
["Z.atleast(lambda x1: Z.forall(lambda x2: Z.equal(x1,x2,'size'),X),2,X)"]
["Z.forall(lambda x1: Z.grequal(x1,3,'size'),X)"]
["Z.forall(lambda x1: Z.not_operator(Z.or_operator(Z.or_operator(Z.greater(x1,1,'size'),Z.not_operator(Z.less(x1,1,'size'))),Z.and_operator(Z.not_operator(Z.equal(x1,'upright','orientation')),Z.and_operator(Z.not_operator(Z.greater(x1,1,'size')),Z.equal(x1,'red','colour'))))),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.greater(x1,x2,'size'),Z.and_operator(Z.equal(x1,'green','colour'),Z.lequal(x2,x1,'size'))),X),X)"]
["Z.exists(lambda x1: Z.atmost(lambda x2: Z.equal(x1,x2,'orientation'),3,X),X)"]
["Z.exists(lambda x1: Z.lequal(x1,1,'size'),X)"]
["Z.atmost(lambda x1: Z.not_operator(Z.or_operator(Z.not_operator(Z.equal(x1,'upright','orientation')),Z.not_operator(Z.not_operator(Z.equal(x1,3,'size'))))),1,X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.and_operator(Z.equal(x1,'no','grounded'),Z.not_operator(Z.greater(x1,1,'size'))),Z.equal(x1,'strange','orientation')),1,X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.greater(x1,3,'size'),X),X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.equal(x1,2,'size'),X),2,X)"]
["Z.atmost(lambda x1: Z.not_operator(Z.not_operator(Z.grequal(x1,3,'size'))),3,X)"]
["Z.atmost(lambda x1: Z.not_operator(Z.not_operator(Z.not_operator(Z.equal(x1,1,'size')))),3,X)"]
["Z.exists(lambda x1: Z.atleast(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),2,X),X)"]
["Z.exactly(lambda x1: Z.equal(x1,2,'size'),2,X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.forall(lambda x3: Z.or_operator(Z.not_operator(Z.less(x1,x2,'size')),Z.not_operator(Z.and_operator(Z.hor_operator(x3,x1,'contact'),Z.equal(x2,'no','grounded')))),X),X),X)"]
["Z.atmost(lambda x1: Z.forall(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.not_operator(Z.and_operator(Z.hor_operator(x1,x2,'contact'),Z.and_operator(Z.and_operator(Z.not_operator(Z.greater(x1,x3,'size')),Z.equal(x3,x2,'colour')),Z.hor_operator(x2,x3,'contact'))))),3,X),X),3,X)"]
["Z.exists(lambda x1: Z.equal(x1,'strange','orientation'),X)"]
["Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.forall(lambda x1: Z.equal(x1,'rhs','orientation'),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.hor_operator(x3,x1,'contact'),X),X),X)"]
["Z.atmost(lambda x1: Z.lequal(x1,1,'size'),2,X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.or_operator(Z.equal(x2,x1,'orientation'),Z.not_operator(Z.and_operator(Z.greater(x2,x1,'size'),Z.greater(x2,x1,'size'))))),X),X)"]
["Z.atmost(lambda x1: Z.exactly(lambda x2: Z.equal(x2,x1,'size'),1,X),2,X)"]
["Z.exactly(lambda x1: Z.equal(x1,'yes','grounded'),1,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.grequal(x1,x2,'size'),X),X)"]
["Z.atmost(lambda x1: Z.equal(x1,'green','colour'),2,X)"]
["Z.exists(lambda x1: Z.atleast(lambda x2: Z.exists(lambda x3: Z.equal(x3,x1,'size'),X),1,X),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.less(x3,3,'size'),X),X),X)"]
["Z.forall(lambda x1: Z.atleast(lambda x2: Z.equal(x1,'no','grounded'),2,X),X)"]
["Z.forall(lambda x1: Z.lequal(x1,1,'size'),X)"]
["Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'yes','grounded')),1,X)"]
["Z.forall(lambda x1: Z.and_operator(Z.or_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.equal(x1,2,'size')))),Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.equal(x1,'lhs','orientation'),Z.less(x1,2,'size')))),Z.not_operator(Z.not_operator(Z.and_operator(Z.equal(x1,'lhs','orientation'),Z.greater(x1,3,'size'))))),X)"]
["Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.atmost(lambda x3: Z.equal(x3,'strange','orientation'),2,X),X),X)"]
