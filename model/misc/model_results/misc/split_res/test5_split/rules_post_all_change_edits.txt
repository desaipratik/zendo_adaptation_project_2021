["Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)", "Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.equal(x1,'lhs','orientation'),X),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.equal(x1,x3,'orientation'),X),X),X)"]
["Z.forall(lambda x1: Z.grequal(x1,1,'size'),X)", "Z.forall(lambda x1: Z.grequal(x1,1,'size'),X)"]
["Z.exists(lambda x1: Z.greater(x1,1,'size'),X)", "Z.exists(lambda x1: Z.greater(x1,1,'size'),X)"]
["Z.forall(lambda x1: Z.lequal(x1,2,'size'),X)", "Z.forall(lambda x1: Z.lequal(x1,2,'size'),X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.or_operator(Z.not_operator(Z.not_operator(Z.lequal(x1,x2,'size'))),Z.equal(x2,'no','grounded'))),X),1,X)", "Z.atmost(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.or_operator(Z.not_operator(Z.not_operator(Z.lequal(x1,x2,'size'))),Z.equal(x2,'no','grounded'))),X),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,1,'size'),X)", "Z.exists(lambda x1: Z.equal(x1,1,'size'),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.grequal(x1,x2,'size'),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.grequal(x1,x2,'size'),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.exactly(lambda x1: Z.equal(x1,1,'size'),2,X)", "Z.exactly(lambda x1: Z.equal(x1,1,'size'),2,X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.forall(lambda x1: Z.lequal(x1,2,'size'),X)", "Z.forall(lambda x1: Z.lequal(x1,2,'size'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.or_operator(Z.hor_operator(x1,x2,'contact'),Z.greater(x1,1,'size')),Z.not_operator(Z.greater(x2,x1,'size'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.or_operator(Z.hor_operator(x1,x2,'contact'),Z.greater(x1,1,'size')),Z.not_operator(Z.greater(x2,x1,'size'))),X),X)"]
["Z.atleast(lambda x1: Z.atleast(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.hor_operator(x2,x1,'contact')),2,X),2,X),2,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.hor_operator(x2,x1,'contact')),2,X),2,X),2,X)"]
["Z.exists(lambda x1: Z.or_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.and_operator(Z.not_operator(Z.grequal(x1,1,'size')),Z.or_operator(Z.not_operator(Z.equal(x1,'blue','colour')),Z.greater(x1,2,'size')))))),Z.not_operator(Z.less(x1,1,'size'))),X)", "Z.exists(lambda x1: Z.or_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.and_operator(Z.not_operator(Z.grequal(x1,1,'size')),Z.or_operator(Z.not_operator(Z.equal(x1,'blue','colour')),Z.greater(x1,2,'size')))))),Z.not_operator(Z.less(x1,1,'size'))),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.atmost(lambda x3: Z.equal(x2,'blue','colour'),3,X),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.atmost(lambda x3: Z.equal(x2,'blue','colour'),3,X),X),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.hor_operator(x2,x1,'contact'),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.hor_operator(x2,x1,'contact'),X),X)"]
["Z.atmost(lambda x1: Z.grequal(x1,1,'size'),1,X)", "Z.atmost(lambda x1: Z.grequal(x1,1,'size'),1,X)"]
["Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'strange','orientation')),2,X)", "Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'strange','orientation')),2,X)"]
["Z.atleast(lambda x1: Z.lequal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.lequal(x1,1,'size'),1,X)"]
["Z.forall(lambda x1: Z.atleast(lambda x2: Z.hor_operator(x1,x2,'contact'),3,X),X)", "Z.forall(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.exactly(lambda x1: Z.exists(lambda x2: Z.equal(x1,'green','colour'),X),3,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.equal(x1,'green','colour'),X),3,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.hor_operator(x2,x3,'contact')),3,X),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.hor_operator(x2,x3,'contact')),3,X),X),X)"]
["Z.atleast(lambda x1: Z.grequal(x1,1,'size'),3,X)", "Z.atleast(lambda x1: Z.grequal(x1,1,'size'),3,X)"]
["Z.exists(lambda x1: Z.equal(x1,'no','grounded'),X)", "Z.exists(lambda x1: Z.equal(x1,'no','grounded'),X)"]
["Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'green','colour')),1,X)"]
["Z.forall(lambda x1: Z.equal(x1,'no','grounded'),X)", "Z.forall(lambda x1: Z.equal(x1,'no','grounded'),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.atleast(lambda x3: Z.not_operator(Z.not_operator(Z.greater(x1,1,'size'))),2,X),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.atleast(lambda x3: Z.not_operator(Z.not_operator(Z.greater(x1,1,'size'))),2,X),X),X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)"]
["Z.forall(lambda x1: Z.grequal(x1,1,'size'),X)", "Z.forall(lambda x1: Z.grequal(x1,1,'size'),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)"]
["Z.forall(lambda x1: Z.equal(x1,1,'size'),X)", "Z.forall(lambda x1: Z.equal(x1,1,'size'),X)"]
["Z.forall(lambda x1: Z.not_operator(Z.greater(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.greater(x1,3,'size')),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.equal(x1,'no','grounded')),X)", "Z.exists(lambda x1: Z.not_operator(Z.equal(x1,'no','grounded')),X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.lequal(x2,x1,'size'),X),2,X)", "Z.atmost(lambda x1: Z.exists(lambda x2: Z.lequal(x2,x1,'size'),X),2,X)"]
["Z.atmost(lambda x1: Z.equal(x1,'no','grounded'),2,X)", "Z.atmost(lambda x1: Z.equal(x1,'no','grounded'),2,X)"]
["Z.atmost(lambda x1: Z.equal(x1,2,'size'),2,X)", "Z.atmost(lambda x1: Z.equal(x1,2,'size'),2,X)"]
["Z.atleast(lambda x1: Z.forall(lambda x2: Z.lequal(x2,3,'size'),X),3,X)", "Z.atleast(lambda x1: Z.forall(lambda x2: Z.lequal(x2,3,'size'),X),3,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)", "Z.atleast(lambda x1: Z.equal(x1,'red','colour'),2,X)"]
["Z.atmost(lambda x1: Z.equal(x1,2,'size'),3,X)", "Z.atmost(lambda x1: Z.equal(x1,2,'size'),3,X)"]
["Z.exists(lambda x1: Z.exactly(lambda x2: Z.not_operator(Z.and_operator(Z.hor_operator(x2,x1,'contact'),Z.hor_operator(x1,x2,'contact'))),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.not_operator(Z.and_operator(Z.hor_operator(x2,x1,'contact'),Z.hor_operator(x1,x2,'contact'))),2,X),X)"]
