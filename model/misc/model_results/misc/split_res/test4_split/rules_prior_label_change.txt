["Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)", "Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),1,X),2,X)"]
["Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)", "Z.exactly(lambda x1: Z.atmost(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),3,X),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)", "Z.forall(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)", "Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)", "Z.exactly(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,3,'size')),Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,3,'size'))),Z.hor_operator(x1,x2,'contact')),X),2,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)", "Z.exists(lambda x1: Z.exists(lambda x2: Z.or_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.or_operator(Z.equal(x2,'red','colour'),Z.equal(x2,'green','colour'))),Z.hor_operator(x1,x2,'contact'))),X),X)"]
["Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)", "Z.atleast(lambda x1: Z.or_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'blue','colour')),Z.and_operator(Z.equal(x1,1,'size'),Z.equal(x1,'green','colour'))),1,X)"]
["Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),1,X),1,X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)", "Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.not_operator(Z.equal(x1,'upright','orientation'))),1,X)"]
["Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)", "Z.atleast(lambda x1: Z.atleast(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x1,1,'size')),Z.and_operator(Z.equal(x2,'blue','colour'),Z.equal(x2,1,'size'))),1,X),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)", "Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)"]
["Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)", "Z.exists(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.hor_operator(x1,x2,'contact')),2,X),X)"]
