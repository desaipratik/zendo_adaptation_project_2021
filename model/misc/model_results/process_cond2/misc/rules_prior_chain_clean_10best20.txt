["Z.forall(lambda x1: Z.less(x1,1,'size'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.atmost(lambda x3: Z.grequal(x3,x2,'size'),1,X),X),X)"]
["Z.atmost(lambda x1: Z.less(x1,2,'size'),2,X)"]
["Z.atleast(lambda x1: Z.greater(x1,3,'size'),1,X)"]
["Z.forall(lambda x1: Z.less(x1,3,'size'),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.not_operator(Z.not_operator(Z.equal(x1,'green','colour')))),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.equal(x3,x1,'orientation'),X),X),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.greater(x1,x2,'size')),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.equal(x3,x2,'colour'),X),X),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.lequal(x1,x2,'size'),X),X)"]
["Z.atleast(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.greater(x2,x1,'size'),X),X),2,X)"]
["Z.exists(lambda x1: Z.less(x1,3,'size'),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.equal(x1,'upright','orientation'),X),X)"]
["Z.forall(lambda x1: Z.atmost(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.hor_operator(x2,x3,'contact'),Z.or_operator(Z.not_operator(Z.or_operator(Z.equal(x2,x1,'colour'),Z.equal(x2,x3,'orientation'))),Z.less(x1,x2,'size'))),X),3,X),X)"]
["Z.atleast(lambda x1: Z.exactly(lambda x2: Z.atmost(lambda x3: Z.equal(x1,'no','grounded'),2,X),3,X),3,X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.grequal(x1,x2,'size'),X),X),2,X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.or_operator(Z.and_operator(Z.hor_operator(x2,x3,'contact'),Z.lequal(x2,1,'size')),Z.not_operator(Z.not_operator(Z.grequal(x2,x3,'size')))),X),X),3,X)"]
["Z.forall(lambda x1: Z.equal(x1,'no','grounded'),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.greater(x1,x2,'size'),X),X)"]
["Z.forall(lambda x1: Z.atleast(lambda x2: Z.atmost(lambda x3: Z.equal(x3,x2,'grounded'),2,X),2,X),X)"]
["Z.exists(lambda x1: Z.or_operator(Z.or_operator(Z.not_operator(Z.not_operator(Z.equal(x1,'no','grounded'))),Z.not_operator(Z.and_operator(Z.equal(x1,'no','grounded'),Z.equal(x1,'no','grounded')))),Z.or_operator(Z.not_operator(Z.or_operator(Z.equal(x1,'upright','orientation'),Z.equal(x1,'red','colour'))),Z.and_operator(Z.and_operator(Z.equal(x1,'no','grounded'),Z.grequal(x1,3,'size')),Z.equal(x1,'red','colour')))),X)"]
["Z.exactly(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.equal(x3,'yes','grounded'),Z.equal(x2,x1,'grounded')),X),X),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.forall(lambda x1: Z.or_operator(Z.or_operator(Z.greater(x1,2,'size'),Z.lequal(x1,3,'size')),Z.equal(x1,'no','grounded')),X)"]
["Z.exactly(lambda x1: Z.less(x1,2,'size'),1,X)"]
["Z.atmost(lambda x1: Z.equal(x1,'green','colour'),1,X)"]
["Z.atleast(lambda x1: Z.or_operator(Z.not_operator(Z.or_operator(Z.lequal(x1,1,'size'),Z.or_operator(Z.equal(x1,'green','colour'),Z.lequal(x1,3,'size')))),Z.not_operator(Z.less(x1,1,'size'))),2,X)"]
["Z.forall(lambda x1: Z.exactly(lambda x2: Z.forall(lambda x3: Z.lequal(x3,2,'size'),X),3,X),X)"]
["Z.atmost(lambda x1: Z.not_operator(Z.equal(x1,'red','colour')),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.equal(x3,x2,'orientation'),X),X),X)"]
["Z.exists(lambda x1: Z.greater(x1,3,'size'),X)"]
["Z.exists(lambda x1: Z.atleast(lambda x2: Z.exists(lambda x3: Z.equal(x2,x1,'orientation'),X),1,X),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.not_operator(Z.equal(x2,x3,'colour')),X),X),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.equal(x1,'no','grounded')))),Z.greater(x2,x1,'size')),Z.or_operator(Z.lequal(x1,3,'size'),Z.grequal(x1,x2,'size'))),X),X)"]
["Z.exactly(lambda x1: Z.equal(x1,'no','grounded'),1,X)"]
["Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.atmost(lambda x1: Z.and_operator(Z.less(x1,1,'size'),Z.not_operator(Z.and_operator(Z.lequal(x1,2,'size'),Z.less(x1,2,'size')))),1,X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.or_operator(Z.equal(x1,x2,'orientation'),Z.equal(x2,1,'size'))),X),X)"]
["Z.forall(lambda x1: Z.atmost(lambda x2: Z.forall(lambda x3: Z.hor_operator(x2,x3,'contact'),X),1,X),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.atleast(lambda x3: Z.less(x1,x3,'size'),3,X),X),X)"]
["Z.forall(lambda x1: Z.grequal(x1,1,'size'),X)"]
["Z.atleast(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.lequal(x1,3,'size')),3,X)"]
["Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)"]
["Z.exists(lambda x1: Z.atleast(lambda x2: Z.equal(x2,x1,'colour'),2,X),X)"]
["Z.exists(lambda x1: Z.or_operator(Z.not_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.less(x1,3,'size'))),Z.and_operator(Z.and_operator(Z.greater(x1,1,'size'),Z.equal(x1,'lhs','orientation')),Z.less(x1,2,'size'))),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.or_operator(Z.and_operator(Z.equal(x2,x1,'grounded'),Z.not_operator(Z.greater(x1,3,'size'))),Z.equal(x2,x1,'colour')),X),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.not_operator(Z.grequal(x1,x2,'size'))),X),X)"]
["Z.forall(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.not_operator(Z.grequal(x1,x2,'size')),Z.hor_operator(x2,x1,'contact')),3,X),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.equal(x1,'yes','grounded')),3,X),X),X)"]
["Z.exactly(lambda x1: Z.and_operator(Z.or_operator(Z.not_operator(Z.and_operator(Z.equal(x1,'yes','grounded'),Z.grequal(x1,1,'size'))),Z.not_operator(Z.not_operator(Z.grequal(x1,2,'size')))),Z.equal(x1,'no','grounded')),3,X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.equal(x1,x2,'orientation'),X),X)"]
["Z.forall(lambda x1: Z.not_operator(Z.not_operator(Z.not_operator(Z.less(x1,1,'size')))),X)"]
["Z.exists(lambda x1: Z.equal(x1,1,'size'),X)"]
["Z.exists(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.atmost(lambda x1: Z.or_operator(Z.or_operator(Z.or_operator(Z.not_operator(Z.and_operator(Z.equal(x1,2,'size'),Z.equal(x1,'yes','grounded'))),Z.not_operator(Z.equal(x1,'yes','grounded'))),Z.or_operator(Z.not_operator(Z.grequal(x1,3,'size')),Z.and_operator(Z.equal(x1,'upright','orientation'),Z.greater(x1,2,'size')))),Z.not_operator(Z.greater(x1,1,'size'))),3,X)"]
["Z.exists(lambda x1: Z.equal(x1,1,'size'),X)"]
["Z.atleast(lambda x1: Z.forall(lambda x2: Z.equal(x1,x2,'colour'),X),3,X)"]
["Z.forall(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.exists(lambda x1: Z.lequal(x1,2,'size'),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'green','colour'),3,X)"]
["Z.atmost(lambda x1: Z.grequal(x1,1,'size'),2,X)"]
["Z.forall(lambda x1: Z.lequal(x1,1,'size'),X)"]
["Z.forall(lambda x1: Z.and_operator(Z.and_operator(Z.and_operator(Z.not_operator(Z.equal(x1,'yes','grounded')),Z.not_operator(Z.equal(x1,'no','grounded'))),Z.not_operator(Z.not_operator(Z.equal(x1,'green','colour')))),Z.or_operator(Z.equal(x1,'green','colour'),Z.or_operator(Z.equal(x1,'green','colour'),Z.equal(x1,'green','colour')))),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.or_operator(Z.equal(x2,x1,'orientation'),Z.lequal(x2,3,'size')),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,1,'size'),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.and_operator(Z.not_operator(Z.or_operator(Z.or_operator(Z.equal(x2,x1,'size'),Z.equal(x1,'red','colour')),Z.hor_operator(x2,x1,'contact'))),Z.less(x2,1,'size')),Z.not_operator(Z.grequal(x1,x2,'size'))),X),X)"]
["Z.forall(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.lequal(x2,x1,'size'),X),X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.less(x2,x1,'size'),X),X),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'no','grounded'),3,X)"]
["Z.exists(lambda x1: Z.equal(x1,'strange','orientation'),X)"]
["Z.forall(lambda x1: Z.greater(x1,2,'size'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.equal(x2,'blue','colour'),X),X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.hor_operator(x2,x1,'contact'),X),3,X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.forall(lambda x3: Z.hor_operator(x3,x2,'contact'),X),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.exactly(lambda x1: Z.exists(lambda x2: Z.equal(x2,'red','colour'),X),3,X)"]
["Z.atmost(lambda x1: Z.greater(x1,2,'size'),3,X)"]
["Z.atmost(lambda x1: Z.less(x1,2,'size'),3,X)"]
["Z.exactly(lambda x1: Z.atleast(lambda x2: Z.exactly(lambda x3: Z.equal(x2,x1,'grounded'),2,X),1,X),1,X)"]
["Z.forall(lambda x1: Z.atleast(lambda x2: Z.exists(lambda x3: Z.not_operator(Z.equal(x1,x2,'orientation')),X),1,X),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.hor_operator(x1,x2,'contact')),X),X)"]
["Z.exists(lambda x1: Z.atmost(lambda x2: Z.or_operator(Z.or_operator(Z.equal(x2,'yes','grounded'),Z.less(x1,1,'size')),Z.not_operator(Z.equal(x1,x2,'colour'))),2,X),X)"]
["Z.exists(lambda x1: Z.greater(x1,2,'size'),X)"]
["Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.atleast(lambda x1: Z.not_operator(Z.or_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.equal(x1,'no','grounded')))),Z.not_operator(Z.equal(x1,1,'size')))),3,X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.grequal(x2,x1,'size'),X),X)"]
["Z.forall(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.not_operator(Z.not_operator(Z.hor_operator(x1,x2,'contact'))),X),X)"]
["Z.exists(lambda x1: Z.atmost(lambda x2: Z.exactly(lambda x3: Z.not_operator(Z.hor_operator(x2,x3,'contact')),1,X),3,X),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.less(x1,2,'size')),X)"]
["Z.forall(lambda x1: Z.grequal(x1,3,'size'),X)"]
["Z.exists(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.atleast(lambda x1: Z.less(x1,2,'size'),1,X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.less(x1,x3,'size'),X),X),X)"]
["Z.exists(lambda x1: Z.atleast(lambda x2: Z.forall(lambda x3: Z.not_operator(Z.not_operator(Z.and_operator(Z.or_operator(Z.hor_operator(x2,x3,'contact'),Z.lequal(x2,2,'size')),Z.or_operator(Z.lequal(x2,x1,'size'),Z.not_operator(Z.equal(x1,x3,'grounded')))))),X),1,X),X)"]
["Z.exactly(lambda x1: Z.forall(lambda x2: Z.equal(x1,x2,'size'),X),2,X)"]
["Z.exists(lambda x1: Z.equal(x1,'green','colour'),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.exactly(lambda x3: Z.not_operator(Z.and_operator(Z.not_operator(Z.hor_operator(x1,x2,'contact')),Z.not_operator(Z.or_operator(Z.hor_operator(x3,x1,'contact'),Z.not_operator(Z.or_operator(Z.equal(x2,'yes','grounded'),Z.equal(x3,x2,'colour'))))))),1,X),X),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.equal(x1,'yes','grounded'),X),X),X)"]
["Z.atmost(lambda x1: Z.lequal(x1,1,'size'),2,X)"]
["Z.forall(lambda x1: Z.lequal(x1,2,'size'),X)"]
["Z.exists(lambda x1: Z.equal(x1,2,'size'),X)"]
["Z.forall(lambda x1: Z.equal(x1,'rhs','orientation'),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.less(x1,2,'size')),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.forall(lambda x3: Z.not_operator(Z.hor_operator(x1,x3,'contact')),X),X),X)"]
["Z.atleast(lambda x1: Z.greater(x1,3,'size'),2,X)"]
["Z.exists(lambda x1: Z.equal(x1,'yes','grounded'),X)"]
["Z.forall(lambda x1: Z.and_operator(Z.not_operator(Z.less(x1,3,'size')),Z.not_operator(Z.lequal(x1,2,'size'))),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.forall(lambda x3: Z.not_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.equal(x1,'strange','orientation')))))),X),X),X)"]
["Z.forall(lambda x1: Z.exactly(lambda x2: Z.equal(x1,1,'size'),3,X),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.not_operator(Z.or_operator(Z.greater(x1,1,'size'),Z.equal(x1,'green','colour')))),X)"]
["Z.atmost(lambda x1: Z.grequal(x1,1,'size'),1,X)"]
["Z.forall(lambda x1: Z.less(x1,3,'size'),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.atleast(lambda x3: Z.not_operator(Z.and_operator(Z.not_operator(Z.or_operator(Z.equal(x3,x2,'orientation'),Z.or_operator(Z.equal(x3,'no','grounded'),Z.hor_operator(x1,x3,'contact')))),Z.equal(x3,'strange','orientation'))),3,X),X),X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.and_operator(Z.less(x1,2,'size'),Z.not_operator(Z.equal(x2,2,'size'))),X),X),3,X)"]
["Z.exists(lambda x1: Z.lequal(x1,3,'size'),X)"]
["Z.exists(lambda x1: Z.or_operator(Z.less(x1,2,'size'),Z.equal(x1,'blue','colour')),X)"]
["Z.exists(lambda x1: Z.greater(x1,1,'size'),X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.less(x1,3,'size'),X),X),3,X)"]
["Z.exactly(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.greater(x2,x1,'size')),X),1,X)"]
["Z.exactly(lambda x1: Z.and_operator(Z.lequal(x1,3,'size'),Z.and_operator(Z.or_operator(Z.equal(x1,1,'size'),Z.not_operator(Z.not_operator(Z.grequal(x1,1,'size')))),Z.not_operator(Z.and_operator(Z.greater(x1,1,'size'),Z.or_operator(Z.lequal(x1,1,'size'),Z.equal(x1,'lhs','orientation')))))),2,X)"]
["Z.exists(lambda x1: Z.equal(x1,'no','grounded'),X)"]
["Z.forall(lambda x1: Z.not_operator(Z.and_operator(Z.not_operator(Z.or_operator(Z.lequal(x1,3,'size'),Z.greater(x1,1,'size'))),Z.equal(x1,'upright','orientation'))),X)"]
["Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.not_operator(Z.lequal(x1,1,'size'))),X)"]
["Z.atmost(lambda x1: Z.atleast(lambda x2: Z.not_operator(Z.and_operator(Z.or_operator(Z.hor_operator(x1,x2,'contact'),Z.hor_operator(x1,x2,'contact')),Z.equal(x1,x2,'colour'))),1,X),2,X)"]
["Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,3,'size')),3,X)"]
