["Z.exists(lambda x1: Z.atleast(lambda x2: Z.hor_operator(x1,x2,'contact'),2,X),X)"]
["Z.exists(lambda x1: Z.lequal(x1,1,'size'),X)"]
["Z.exactly(lambda x1: Z.exactly(lambda x2: Z.and_operator(Z.and_operator(Z.hor_operator(x2,x1,'contact'),Z.hor_operator(x1,x2,'contact')),Z.equal(x2,'green','colour')),2,X),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'blue','colour')),Z.or_operator(Z.equal(x3,'green','colour'),Z.greater(x3,1,'size'))),X),X),X)"]
["Z.forall(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),X)"]
["Z.exists(lambda x1: Z.exactly(lambda x2: Z.not_operator(Z.equal(x2,3,'size')),1,X),X)"]
["Z.exactly(lambda x1: Z.lequal(x1,2,'size'),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)"]
["Z.atleast(lambda x1: Z.lequal(x1,1,'size'),3,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.exactly(lambda x1: Z.less(x1,1,'size'),1,X)"]
["Z.exists(lambda x1: Z.less(x1,1,'size'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)"]
["Z.exists(lambda x1: Z.not_operator(Z.not_operator(Z.grequal(x1,3,'size'))),X)"]
["Z.atleast(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),3,X)"]
["Z.atleast(lambda x1: Z.forall(lambda x2: Z.equal(x1,'strange','orientation'),X),1,X)"]
["Z.atleast(lambda x1: Z.less(x1,1,'size'),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'blue','colour')),Z.equal(x3,'green','colour')),X),X),X)"]
["Z.exactly(lambda x1: Z.forall(lambda x2: Z.or_operator(Z.equal(x1,1,'size'),Z.equal(x2,2,'size')),X),2,X)"]
["Z.exists(lambda x1: Z.not_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.not_operator(Z.equal(x1,'green','colour'))))))),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)", "Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.and_operator(Z.not_operator(Z.equal(x2,'blue','colour')),Z.greater(x1,x2,'size'))),X),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.equal(x1,'blue','colour'),Z.greater(x1,x2,'size')),X),X)"]
["Z.forall(lambda x1: Z.not_operator(Z.equal(x1,'upright','orientation')),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.exists(lambda x3: Z.equal(x3,'yes','grounded'),X),X),X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.grequal(x1,1,'size')),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.exactly(lambda x1: Z.grequal(x1,1,'size'),2,X)"]
["Z.forall(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.atleast(lambda x1: Z.forall(lambda x2: Z.or_operator(Z.hor_operator(x1,x2,'contact'),Z.not_operator(Z.and_operator(Z.equal(x2,'red','colour'),Z.equal(x2,1,'size')))),X),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x2,'green','colour')),Z.greater(x1,x2,'size')),X),X)"]
["Z.forall(lambda x1: Z.atleast(lambda x2: Z.atmost(lambda x3: Z.not_operator(Z.and_operator(Z.not_operator(Z.less(x3,1,'size')),Z.not_operator(Z.not_operator(Z.less(x2,3,'size'))))),1,X),1,X),X)"]
["Z.exists(lambda x1: Z.forall(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'red','colour')),Z.and_operator(Z.hor_operator(x1,x2,'contact'),Z.hor_operator(x1,x2,'contact'))),X),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)"]
["Z.forall(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.less(x2,1,'size'),X),X),X)"]
["Z.exactly(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.atmost(lambda x1: Z.not_operator(Z.equal(x1,'red','colour')),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)"]
["Z.exactly(lambda x1: Z.equal(x1,'green','colour'),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.hor_operator(x1,x2,'contact'),Z.and_operator(Z.not_operator(Z.equal(x1,'upright','orientation')),Z.not_operator(Z.greater(x2,3,'size')))),X),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.forall(lambda x3: Z.grequal(x1,1,'size'),X),X),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.not_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'blue','colour'))),Z.equal(x3,'green','colour')),X),X),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'green','colour')),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)", "Z.exists(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,'lhs','orientation')),X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'upright','orientation')),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),1,X)"]
["Z.exists(lambda x1: Z.less(x1,1,'size'),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)"]
["Z.exists(lambda x1: Z.equal(x1,'blue','colour'),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),2,X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x2,'blue','colour')),Z.or_operator(Z.not_operator(Z.equal(x1,x2,'size')),Z.not_operator(Z.hor_operator(x1,x2,'contact')))),X),2,X)"]
["Z.atmost(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.hor_operator(x1,x2,'contact'),Z.and_operator(Z.not_operator(Z.greater(x1,x2,'size')),Z.not_operator(Z.equal(x2,'upright','orientation')))),X),3,X)"]
["Z.exists(lambda x1: Z.exactly(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'blue','colour')),Z.equal(x3,'green','colour')),X),2,X),X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.and_operator(Z.equal(x1,'green','colour'),Z.greater(x2,x1,'size')),Z.hor_operator(x1,x2,'contact')),X),X)"]
["Z.exists(lambda x1: Z.and_operator(Z.grequal(x1,3,'size'),Z.grequal(x1,1,'size')),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.hor_operator(x1,x2,'contact'),X),X)"]
["Z.forall(lambda x1: Z.less(x1,1,'size'),X)"]
["Z.exists(lambda x1: Z.equal(x1,'no','grounded'),X)"]
["Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)", "Z.exists(lambda x1: Z.or_operator(Z.equal(x1,'red','colour'),Z.equal(x1,'blue','colour')),X)"]
["Z.exists(lambda x1: Z.equal(x1,2,'size'),X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'red','colour'),Z.less(x2,x1,'size')),X),X)"]
["Z.atleast(lambda x1: Z.exists(lambda x2: Z.and_operator(Z.equal(x1,'green','colour'),Z.equal(x2,'blue','colour')),X),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)"]
["Z.exactly(lambda x1: Z.grequal(x1,2,'size'),2,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'blue','colour'),2,X)"]
["Z.exists(lambda x1: Z.less(x1,2,'size'),X)"]
["Z.atleast(lambda x1: Z.and_operator(Z.equal(x1,'blue','colour'),Z.equal(x1,1,'size')),1,X)"]
["Z.atleast(lambda x1: Z.equal(x1,1,'size'),1,X)"]
["Z.forall(lambda x1: Z.greater(x1,2,'size'),X)"]
["Z.exactly(lambda x1: Z.and_operator(Z.equal(x1,1,'size'),Z.not_operator(Z.equal(x1,'upright','orientation'))),2,X)"]
["Z.atleast(lambda x1: Z.equal(x1,'red','colour'),1,X)"]
["Z.exists(lambda x1: Z.exists(lambda x2: Z.exists(lambda x3: Z.and_operator(Z.and_operator(Z.equal(x1,'red','colour'),Z.equal(x2,'blue','colour')),Z.equal(x3,'green','colour')),X),X),X)"]
["Z.exists(lambda x1: Z.equal(x1,'red','colour'),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)", "Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.equal(x1,x2,'colour')),X),X)"]
["Z.exists(lambda x1: Z.and_operator(Z.not_operator(Z.less(x1,2,'size')),Z.equal(x1,2,'size')),X)"]
["Z.forall(lambda x1: Z.forall(lambda x2: Z.not_operator(Z.less(x2,x1,'size')),X),X)"]
